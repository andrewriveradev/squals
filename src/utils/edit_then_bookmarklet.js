javascript:{;(async (_console, _fetch, _import, _window) => { const log = _console.log; var Algolia = await import(`https://cdn.jsdelivr.net/algoliasearch/3/algoliasearch.min.js`); log({ Algolia }); var AppID = 'UJ5WYC0L7X'; var apiKey = '8ece23f8eb07cd25d40262a1764599b1'; var IdxName = 'Item_production_ordered'; let hits = []; var client = _window.algoliasearch(AppID, apiKey); const rights = await client.getApiKey(apiKey); log({ rights }); var index = client.initIndex(IdxName); var browser = () => index.browseAll(); index  .search({ query: 'iphone' })  .then(({ hits } = {}) => {   console.log({ queriedHits: hits });  })  .catch(err => {   console.log(err);   console.log(err.debugData);  }); browser.on('result', content => {  hits = hits.concat(content.hits); }); browser.on('error', err => {  browser.stop();  throw err; }); browser.on('end', () => {  log('Finished!');  log('We got %d hits', hits.length);  conclude(hits); }); log({ index, browser }); const conclude = async hits => {  var airlockReqs = hits.map(resultElem =>   _fetch(`https://airlock.wework.com/api/v1/users${resultElem.uuid}`)  );  var airLockData = await Promise.all(airlockReqs);  var merged = hits.map((hitElem, i) => ({ ...hitElem, airlock: airLockData[i] }));  log(JSON.stringify(merged));  _window.alert(JSON.stringify(merged)); }; _window.alert('starting...');})(console, fetch, s => s, window);};void(0);
