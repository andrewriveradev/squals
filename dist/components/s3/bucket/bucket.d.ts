/** @module S3Bucket */
declare class S3Bucket {
    /**
     * S3Bucket Class that models info needed for Cloudformation.
     *
     * @description S3 Object maker
     * @param {string} name - A name used for `Ref`, `Fn:Gett` and other getters. The Default is an autogenerated {word}-{word}-{number}.
     * @param {Object} props - The properties config input object.
     * @param {string} props.BucketName - Is a way to set the created BucketName.
     * @param {string} props.AccessControl - Is a way to set the created BucketName.
     * @param {Object} props.AccelerateConfiguration - Is a way to set the created BucketName.
     * @param {Array} props.AnalyticsConfiguration - Is a way to set the created BucketName.
     * @param {Object} props.BucketEncryption - Is a way to set the created BucketName.
     * @param {Array.<Object>} props.BucketEncryption.ServerSideEncryptionConfiguration - Specifies the server-side encryption by default configuration.
     * @param {Object} props.CorsConfiguration - Is a way to set the created BucketName.
     * @param {Array} props.CorsConfiguration.CorsRules - Is a way to set the created BucketName.
     * @param {Array} props.InventoryConfiguration - Is a way to set the created BucketName.
     * @param {Object} props.LifecycleConfiguration - Is a way to set the created BucketName.
     * @param {Object} props.LoggingConfiguration - Is a way to set the created BucketName.
     * @param {Array} props.MetricsConfiguration - Is a way to set the created BucketName.
     * @param {Object} props.NotificationConfiguration - Is a way to set the created BucketName.
     * @param {Object} props.PublicAccessBlockConfiguration - Is a way to set the created BucketName.
     * @param {Object} props.ReplicationConfiguration - Is a way to set the created BucketName.
     * @param {Array} props.Tags - Is a way to set the created BucketName.
     * @param {Object} props.VersioningConfiguration - Is a way to set the created BucketName.
     * @param {Object} props.WebsiteConfiguration - Is a way to set the created BucketName.
     * @example
     *  // #! node myExample.js
     *  var ImportESM = require('esm')(module)
     *  var S3Bucket = ImportESM('./src/s3/bucket.js')
     *  var myBucket = new S3Bucket()
     *  console.log({myBucket})
     */
    constructor(props?: {}, name?: null);
    website(config: any): this;
    toJSON(): {
        [x: number]: {
            Type: any;
            Properties: {};
        };
    };
    Ref(): {
        Ref: any;
    };
    Arn(): {
        'Fn::GetAtt': any[];
    };
    DomainName(): {
        'Fn::GetAtt': any[];
    };
    RegionalDomainName(): {
        'Fn::GetAtt': any[];
    };
    WebsiteURL(): {
        'Fn::GetAtt': any[];
    };
    outputs(existingOutputs: any): any;
    validate(): {
        passes: any;
        failMsgs: any;
    };
}
export { S3Bucket };
//# sourceMappingURL=bucket.d.ts.map